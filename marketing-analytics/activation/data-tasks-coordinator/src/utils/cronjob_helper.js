// Copyright 2019 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/** @fileoverview Cronjob helper functions. */

'use strict';

const {scheduler: {CloudScheduler}} = require('@google-cloud/nodejs-common');

/**
 * Returns the cron job name of Status check task.
 * @param {string=} prefix, default value is the env var 'PROJECT_NAMESPACE'
 * @return {string} Cron job name.
 */
const getStatusCheckCronJobName = (prefix = process.env['PROJECT_NAMESPACE']) => {
  return `${prefix}-intrinsic-cronjob`;
};

/**
 * Sentinel leverages Cloud Scheduler to trigger the Status Check Task (@link
 * '../tasks/internal/status_check_task.js') for those 'programmed asynchronous
 * tasks'. To reduce the TaskLogs generated by this task, use these two
 * functions to resume and pause the scheduler job when suitable.
 *
 * After Status Check Task finds there is no tasks need to be checked or just
 * created, it will use this function pause the job.
 * @return {boolean}
 */
const pauseStatusCheck = () => {
  return new CloudScheduler().pauseJob(getStatusCheckCronJobName());
};

/**
 * When a programmed asynchronous task starts, it will resume this Scheduler job
 * for the self status check in future.
 * @return {boolean}
 */
const resumeStatusCheck = () => {
  return new CloudScheduler().resumeJob(getStatusCheckCronJobName());
};

module.exports = {
  getStatusCheckCronJobName,
  pauseStatusCheck,
  resumeStatusCheck,
};
